#!/usr/bin/env bash

export DEBIAN_FRONTEND=noninteractive

#installpkg(){
#    dpkg-query --status $1 >/dev/null || apt-get install -y $1
#}

updateAptGetPackages(){
	echo "Updating apt-get packages..."
	apt-get update
	echo -e "\tDONE::: Updating apt-get packages."
}

setupMySQL(){
	echo "Setting up MySQL..."
	debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
	debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'
	apt-get install -y mysql-server
	service mysql restart
	mysql --user=root --password=root --host=127.0.0.1 --port=3306 --execute="CREATE DATABASE hello_django DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;"
	echo -e "\tDONE::: Setting up MySQL."
}

setupPythonVirtualEnv(){
	echo "Setting up VirtualEnv..."
	cd /home/vagrant
	wget https://pypi.python.org/packages/source/v/virtualenv/virtualenv-13.1.2.tar.gz
	tar zxvf ./virtualenv-13.1.2.tar.gz
	python ./virtualenv-13.1.2/virtualenv.py ./myDjangoVirtualEnv
	rm -r ./virtualenv-13.1.2/
	rm ./virtualenv-13.1.2.tar.gz
	source ./myDjangoVirtualEnv/bin/activate
	pip install ipython
	deactivate
	echo -e "\tDONE::: Setting up VirtualEnv."
}

installDjangoViaPip(){
	echo "Installing django via pip..."
	cd /home/vagrant
	source ./myDjangoVirtualEnv/bin/activate
	pip install django
	deactivate
	echo -e "\tDONE::: Installing django via pip."
}

installMySQLdbDriversForDjango(){
	echo "Installing MySQL DB Drivers for Django..."
	apt-get install -y libmysqlclient-dev 
	apt-get install -y python-dev
	cd /home/vagrant
	source ./myDjangoVirtualEnv/bin/activate
	pip install mysqlclient
	deactivate
	echo -e "\tDONE::: Installing MySQL DB Drivers for Django."
}

DIYstartNewDjangoProject(){
	echo "DIY::: Start new django project 'mysite'..."
	return
	cd /home/vagrant
	source ./myDjangoVirtualEnv/bin/activate
	cd ./sourcecodes
	django-admin startproject mysite # creates a bunch of files for the project
	deactivate
}

DIYconfigureSettingsDotPy(){
	echo "DIY::: Configure mysite/mysite/settings.py to declare DB/timezone settings..."
	return
	# Use this JSON object as the value for DATABASES['default']:
	{
       'ENGINE':	'django.db.backends.mysql',
       'NAME':		'hello_django',
       'USER': 		'root',
       'PASSWORD':	'root',
       'HOST':		'127.0.0.1',
       'PORT':		'3306'
 	}
	# set TIME_ZONE = 'Asia/Dhaka'
}

DIYpopulateDatabaseWithInitialDjangoSchema(){
	echo "DIY::: Populate database with initial django schema..."
	return
	cd /home/vagrant
	source ./myDjangoVirtualEnv/bin/activate
	cd ./sourcecodes/mysite/
	python ./manage.py migrate # the actual command that sets up the initial DB state
	deactivate
}

DIYrunDjangoServer(){
	echo "DIY::: Run django server..."
	return
	cd /home/vagrant
	source ./myDjangoVirtualEnv/bin/activate
	cd ./sourcecodes/mysite
	python ./manage.py runserver 0.0.0.0:8000 # visit localhost:8001 based on the <config.vm.network "forwarded_port"> settings in Vagrantfile
}

DIYstartNewDjangoApp(){
	echo "DIY::: Start new django app 'polls'..."	
	return
	cd /home/vagrant
	source ./myDjangoVirtualEnv/bin/activate
	cd ./sourcecodes/mysite
	python manage.py startapp polls # creates new directory polls with a fresh application directory structure
	deactivate
}

DIYbuildApplicationModels(){
	echo "DIY::: Build application models..."
	return
	# follow
	# https://docs.djangoproject.com/en/1.8/intro/tutorial01/#creating-models
	# from here onwards
}

DoItYourselfBlock(){
	echo "##################################################################"
	echo "############### YOU HAVE ENTERED DoItYourselfBlock ###############"
	echo "##################################################################"
	DIYstartNewDjangoProject
	DIYconfigureSettingsDotPy
	DIYpopulateDatabaseWithInitialDjangoSchema
	DIYrunDjangoServer
	DIYstartNewDjangoApp
	DIYbuildApplicationModels
}

updateAptGetPackages
setupMySQL
setupPythonVirtualEnv
installDjangoViaPip
installMySQLdbDriversForDjango
DoItYourselfBlock


